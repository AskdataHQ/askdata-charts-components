<!DOCTYPE html>
<!-- saved from url=(0073)https://storage.googleapis.com/askdata-smartchart/prod/horizontal_bar.htm -->
<html class="js-focus-visible" data-js-focus-visible=""><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
  <title>Askdata - Line Chart</title>
  <script src="/lib/scripts/Chart.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js"></script>
  <script src="/lib/scripts/utils.js"></script>
  <script src="/lib/scripts/env.js"></script>
  <script src="/lib/scripts/jquery.min.js"></script>
  <link href="/lib/styles/css" rel="stylesheet" type="text/css">
  <link rel="stylesheet" type="text/css" href="/lib/styles/style.css">
<script type="text/javascript">
var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = window.location.search.substring(1),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
        }
    }
};
</script>
</head>
<body>
<div id="watermark"><img src="/lib/assets/askdata-logo.svg"></div>
<div id="container">
  <canvas id="canvas"></canvas></div>
<script>

  if (getUrlParameter('token') != undefined){
  var token = getUrlParameter('token');
  }else{
  var token = Cookies.get('access_token')
  }

$.ajax({
         url: environment + "/charts/" + getUrlParameter('chartId'),
         type: "GET",
         beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + token
          ).setRequestHeader('Content-Type','application/json')},
         success: function(data) { 
          
          
          console.log(data);
          //var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
          var MONTHS = [data.resultSet.dimension.labels];
    var color = Chart.helpers.color;
var measures = [];
for(var i in data.resultSet.measures) {  
    var item = data.resultSet.measures[i];
    console.log(item);
    // Smarter chart
    // TODO / to be removed Set accent color as the first color
    if (i==0) {item.color = data.resultSet.color.accent; }

    
    measures.push({ 
        "label" : item.name,
        "data" : item.numericValues,
        "borderColor": item.color
    });

}

    // Show legend if measures more than one
    var displayLegend = true
    
    if (measures.length == 1) {
      displayLegend = false;

    }

    var lineChartData = {
      labels: data.resultSet.dimension.labels,
      datasets: measures,
    };

    // Todo - replace with dynamic locale, rounding, currency and measurement units
    // Scales should be aggregated by measurement units
    // Color is used as 3rd axis if the measurements units are greaten than 2
    var labelNumberRoundTo = 2;
    var labelNumberLocale = 'en-US';
    var labelFontSize = 20;
    var labelFontFamily = "'Helvetica', sans-serif";
    var lebelNumberCurrency = null;
    var lebelNumberMeasurmenentUnit = null;

      var ctx = document.getElementById('canvas').getContext('2d');
      window.myHorizontalBar = new Chart(ctx, {
        type: 'line',
        data: lineChartData,
        options: {
          showLines: true,
          fill: false,
          responsive: true,
          maintainAspectRatio:false,
          legend: {
            display : displayLegend,
            position: 'top',
            align: 'start',
            fontSize:50,
            padding: 5,
          },
          title: {
            display: true,
            text: data.title,
            fontSize: 30,
            fontStyle:'normal'
          },
          elements: {
                        line: {
                                fill: false
                        }
              }
        }
      });
    var colorNames = Object.keys(window.chartColors);
}
});  
  </script>
</body>
</html>