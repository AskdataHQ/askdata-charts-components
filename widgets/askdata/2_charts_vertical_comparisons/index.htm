<!--
    THIS EXAMPLE WAS DOWNLOADED FROM https://echarts.apache.org/examples/en/editor.html?c=bar-y-category
-->
<!DOCTYPE html>
<html style="height: 100%">
    <head>
    <meta charset="utf-8">

<!-- Beginning Include Libraries -->

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<script src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js"></script>
<script src="/lib/scripts/utils.js"></script>
<script src="/lib/scripts/env.js"></script>
<script src="/lib/scripts/jquery.min.js"></script>
<link href="/lib/styles/css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="/lib/styles/style.css">
<script src="https://unpkg.com/mustache@latest"></script>

<!-- End Include Libraries -->

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script>

</head>
    <body style="height: 100%; margin: 0">
        <div id="container" style="height: 100%"></div>
     </body>

<script type="text/javascript">

environment_widget = "https://api-dev.askdata.com";
$.ajax({

       url: environment_widget +"/smartinsight/widgets/" + getUrlParameter('widgetId'),
       type: "GET",
       async: false,
       beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + getToken() 
        ).setRequestHeader('Content-Type','application/json')},
       success: function(data) { 
        var dom = document.getElementById("container");
        var myChart = echarts.init(dom);
        var app = {};

        var option;

 
        var datasets = data.fields.m2_id.data.map(function(v,i) {
                    return {'interval':v, 'measure':data.fields.m3_id.data[i],'dimension':data.fields.m1_id.data[i]};
                }); 
        
        
        

        var labelAxes = [];
        var namesAxes = [];
            //iterate through sequence and dimension
        datasets.forEach(function(item) {
                  //get the value of name
                  var val = item.dimension
                  var val2 = item.interval
                  
                  namesAxes.push(val)
                  labelAxes.push(val2);
            });


        
        $.unique(labelAxes);
        var labelAxesUnique = Array.from(new Set(labelAxes));
        var namesAxesUnique = Array.from(new Set(namesAxes));
        console.log(namesAxesUnique)
        

        var y1 = [];
        var y2 = [];
        var y3 = [];
        datasets.forEach(function(item) {
                    if (item.dimension == 'Avg Serie A'){
                        y1.push(item.measure)
                    }
                });

        datasets.forEach(function(item) {
                    if (item.dimension == namesAxesUnique[1]){
                        y2.push(item.measure)
                    }
                });
        datasets.forEach(function(item) {
                    if (item.dimension == namesAxesUnique[2]){
                        y3.push(item.measure)
                    }

                });
        y1 = y1.filter(function( element ) {
                           return element !== undefined;
                        });
        y2 = y2.filter(function( element ) {
                           return element !== undefined;
                        });
        y3 = y3.filter(function( element ) {
                           return element !== undefined;
                        });


        console.log(namesAxesUnique)
        

option = {
   
    tooltip: {
        trigger: 'axis',
        axisPointer: {
            type: 'shadow'
        }
    },
    legend: {
        data: namesAxesUnique
    },
    grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    xAxis: {
        type: 'category',
        data: [labelAxesUnique[0],labelAxesUnique[1],labelAxesUnique[2],labelAxesUnique[3],labelAxesUnique[4],labelAxesUnique[5], labelAxesUnique[6]]
    },
    yAxis: {
       type: 'value',
        boundaryGap: [0, 0.01]
        
    },
    series: [
        {
            name: namesAxesUnique[2],
            type: 'bar',
            data: y1,
            color: '#02a1db'
        },
        {
            name: namesAxesUnique[1],
            type: 'bar',
            data: y2,
            color: '#011EA0'
        },{
            name: namesAxesUnique[0],
            type: 'line',
            data: y3,
            color: '#CCCCCC'
        }
    ]


};

if (option && typeof option === 'object') {
    myChart.setOption(option);
}

       
   
}
});
 </script>
</html>
    